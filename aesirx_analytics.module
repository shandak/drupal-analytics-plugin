<?php

use Drupal\aesirx_analytics\Form\AdminConfig\AesirxAnalyticsAdminConfigForm;
use Drupal\Core\Form\FormStateInterface;

/**
 * @file
 * Primary module hooks for Aesirx Analytics module.
 */

function aesirx_analytics_page_attachments(array &$page): void {
	if (!analytics_config_is_ok())
	{
		return;
	}
	$conf = \Drupal::config(AesirxAnalyticsAdminConfigForm::SETTINGS);
	$domain =
		($conf->get('settings.1st_party_server') ?? 'internal') == 'internal'
			? \Drupal::request()->getSchemeAndHttpHost()
			: $conf->get('settings.domain') ?? '';

	$consent =
		($conf->get('settings.consent') ?? 'false') == 'true'
			? 'false'
			: 'true';

	$clientId = $conf->get('settings.client_id') ?? '';
	$secret = $conf->get('settings.client_secret') ?? '';

	$page['#attached']['html_head'][] = [
		[
			'#tag' => 'script',
			'#value' => 'window.aesirx1stparty="' . $domain . '";window.disableAnalyticsConsent="' . $consent . '";window.aesirxClientID="' . $clientId . '";window.aesirxClientSecret="' . $secret . '";',
		],
		'analytics_inline',
	];

	$page['#attached']['library'][] = 'aesirx_analytics/aesirx_analytics.analytics';
}

/**
 * Implements hook_theme().
 */
function aesirx_analytics_theme($existing, $type, $theme, $path) {
	return [
		'bi-dashboard' => [
			'render element' => 'elements',
			'variables' => [
				'content' => [
					'endpoint_url' => '',
					'data_stream' => '',
					'public_url' => '',
				],
			],
		],
	];
}

/**
 * Implements hook_library_info_alter().
 */
function aesirx_analytics_library_info_alter(&$libraries, $extension) {
	if ($extension != 'aesirx_analytics')
	{
		return;
	}

	$manifest = json_decode(
		file_get_contents(__DIR__ . '/assets/assets-manifest.json', TRUE)
	);

	foreach (['bi', 'config'] as $one)
	{
		foreach ($manifest->entrypoints->{$one}->assets->js ?? [] as $js)
		{
			$libraries['aesirx_analytics.' . $one]['js']['assets/' . $js] = [];
		}
	}
}

function aesirx_analytics_form_alter(&$form, FormStateInterface $form_state, $form_id): void {
	if ($form_id != 'aesirx_analytics_admin_config_form')
	{
		return;
	}

	$form['#attached']['library'][] = 'aesirx_analytics/aesirx_analytics.config';
}

function analytics_config_is_ok(string $isStorage = NULL): bool {
	$conf = \Drupal::config(AesirxAnalyticsAdminConfigForm::SETTINGS);
	$storage = $conf->get('settings.1st_party_server');
	$res = (!empty($storage)
		&& (
			($storage == 'internal' && !empty($conf->get('settings.license')) && \Drupal::service('aesirx_analytics.cli')
					->analytics_cli_exists())
			|| ($storage == 'external' && !empty($conf->get('settings.domain')))
		));

	if ($res
		&& !is_null($isStorage))
	{
		$res = $storage == $isStorage;
	}

	return $res;
}
